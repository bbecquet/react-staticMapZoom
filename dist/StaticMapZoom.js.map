{"version":3,"sources":["../src/StaticMapZoom.jsx"],"names":[],"mappings":"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","file":"StaticMapZoom.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport providers from './staticMapProviders.js';\n\nexport default class StaticMapZoom extends React.Component {\n    static propTypes = {\n        center: PropTypes.array.isRequired,\n        zooms: PropTypes.array,\n        provider: PropTypes.string,\n        apiKey: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        href: PropTypes.string,\n        reticle: PropTypes.bool\n    };\n\n    static defaultProps = {\n        zooms: [3, 6, 14],\n        provider: 'google',\n        width: 500,\n        height: 250,\n        href: null,\n        reticle: false\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            visiblePane: 0\n        };\n    }\n\n    componentDidMount() {\n        this.installMouseBehavior();\n    }\n\n    componentWillUnmount() {\n    }\n\n    buildImageUrls() {\n        return this.props.zooms.map((zoom) => {\n            const opts = {\n                zoom,\n                width: this.props.width,\n                height: this.props.height,\n                lat: this.props.center[0],\n                lng: this.props.center[1],\n                apiKey: this.props.apiKey\n            };\n            return providers[this.props.provider](opts);\n        });\n    }\n\n    installMouseBehavior() {\n        const {\n            height,\n            width,\n            zooms\n        } = this.props;\n\n        // computes coordinates of zones reacting to mouse events (i.e. the \"pyramid\" to the center)\n        const nbLevels = zooms.length - 1;\n        const hSteps = (width / 2) / nbLevels;\n        const vSteps = (height / 2) / nbLevels;\n\n        // levels disappear one by one as the mouse moves closer to the center\n        this.wrapperElement.addEventListener('mousemove', e => {\n            // find the relative coordinates of the mouse in the widget\n            let relX = e.clientX - this.wrapperElement.offsetLeft\n                + document.body.scrollLeft + document.documentElement.scrollLeft;\n            let relY = e.clientY - this.wrapperElement.offsetTop\n                + document.body.scrollTop + document.documentElement.scrollTop;\n            // normalize values so that only the first quadrant has to be tested\n            if (relX > width / 2) {\n                relX = width - relX;\n            }\n            if (relY > height / 2) {\n                relY = height - relY;\n            }\n            // find the zoom, by finding the inner-most zone the cursor is in\n            const pane = Math.min(Math.floor(relX / hSteps), Math.floor(relY / vSteps)) + 1;\n            this.setState({ visiblePane: pane });\n        });\n        // the first level will disappear as soon as the mouse enters the element,\n        // make it reappear when it leaves\n        this.wrapperElement.addEventListener('mouseout', e => {\n            this.setState({ visiblePane: 0 });\n        });\n    }\n\n    render() {\n        const imgUrls = this.buildImageUrls();\n        const panes = imgUrls.map((url, i) =>\n            <div\n                key={i}\n                className=\"staticMapZoom-zoomPane\"\n                style={{\n                    backgroundImage: `url(${url})`,\n                    opacity: (i < this.state.visiblePane) ? 0 : 1\n                }}\n            />\n        );\n        panes.reverse();\n\n        const containerClasses = `staticMapZoom ${this.props.reticle ? 'staticMapZoom-reticle' : ''}`;\n        const containerAttributes = {\n            className: containerClasses,\n            ref: (ref) => {this.wrapperElement = ref;},\n            style: {\n                height: `${this.props.height}px`,\n                width: `${this.props.width}px`\n            }\n        };\n\n        if (this.props.href) {\n            return <a href={this.props.href} {...containerAttributes}>{panes}</a>;\n        }\n\n        return <div {...containerAttributes}>{panes}</div>;\n    }\n}\n"]}